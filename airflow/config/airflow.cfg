[core]
# Airflow home directory
airflow_home = /opt/airflow

# The executor class that airflow should use
executor = LocalExecutor

# SQL database connection string
sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres:5432/airflow

# Whether to load the DAG examples
load_examples = False

# Maximum number of active DAG runs per DAG
max_active_runs_per_dag = 3

# DAGs folder
dags_folder = /opt/airflow/dags

# Base log folder
base_log_folder = /opt/airflow/logs

# Logging level
logging_level = INFO

# Secret key for flask sessions
secret_key = your_secret_key_here

[scheduler]
# Number of seconds between file-parsing loops
dag_dir_list_interval = 60

# How often to scan for new DAGs
processor_poll_interval = 5

# Number of processes to run in parallel
parallelism = 8

[webserver]
# The port on which to run the web server
web_server_port = 8080

# Number of workers to run the webserver on
workers = 2

# Secret key used to run your flask app
secret_key = your_secret_key_here

# Expose the configuration file in the web server
expose_config = False

[celery]
# Celery configuration
result_backend = redis://redis:6379/0
broker_url = redis://redis:6379/0

[smtp]
# Email configuration for notifications
smtp_host = localhost
smtp_starttls = True
smtp_ssl = False
smtp_port = 587
smtp_mail_from = airflow@fraudguard.com

[kubernetes]
# Kubernetes configuration
namespace = airflow
worker_container_repository = fraudguard/airflow-worker
worker_container_tag = latest
delete_worker_pods = True

[mlflow]
# MLflow tracking server
tracking_uri = http://mlflow:5000
experiment_name = fraud-detection

[fraud_detection]
# Custom configuration for fraud detection
data_path = /opt/airflow/data
model_path = /opt/airflow/models
min_auc_threshold = 0.75
min_precision_threshold = 0.70
alert_email = alerts@fraudguard.com